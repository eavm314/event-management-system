name: Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'backend/**'

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: devops

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials ðŸ¤–
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, and push image to Amazon ECR
        working-directory: backend
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: 'event-management-system'
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    environment: devops

    steps:
      - name: Configure AWS credentials ðŸ¤–
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Deploy to ECS
        env:
          ECS_CLUSTER: ${{ vars.ECS_CLUSTER }}
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service backend-service \
            --force-new-deployment